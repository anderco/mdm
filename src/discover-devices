#!/bin/bash

# Copyright (C) 2004-2007 Centro de Computacao Cientifica e Software Livre
# Departamento de Informatica - Universidade Federal do Parana - C3SL/UFPR
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
# USA.

# This script discover evdev mice and keyboards and also discovers video cards
# on the machine.
# For input devices, it uses /proc/bus/input/devices
# For video cardes, it uses the "discover" package.

# TODO: find a decent way to do all this.

DISCOVER=/sbin/discover

# This function prints the physical addresses of the mice found
function discover_input () {

    KEYBOARDS=($(hal-find-by-capability --capability input.keyboard))
    MICE=($(hal-find-by-capability --capability input.mouse))

    for i in ${KEYBOARDS[@]}; do
	EVDEV_NODE=$(hal-device $i | grep linux.device_file | cut -d"'" -f2)
        echo -e "kbd\t${i}"
	echo -e "kevdev\t${EVDEV_NODE}"
    done
    for i in ${MICE[@]}; do
	EVDEV_NODE=$(hal-device $i | grep linux.device_file | cut -d"'" -f2)
        echo -e "mouse\t${i}"
	echo -e "mevdev\t${EVDEV_NODE}"
    done
}

# Prints bus address and drivers of the video cards.
function video_cards () {

    # calling discover is way toooooo slow!
    OUTPUT=$($DISCOVER -t display --vendor-id --model-id)
    VENDOR_IDS=($(echo "$OUTPUT" | cut -d' ' -f1))
    MODEL_IDS=($( echo "$OUTPUT" | cut -d' ' -f2))
    # There can be empty lines on "drivers"
    DRIVERS=($($DISCOVER -t display --data-path=xfree86/server/device/driver \
	       | sed 's/^$/vesa/g'))

    for (( i = 0; i < ${#VENDOR_IDS[@]}; i++)); do
        # If there are multiple cards with the same IDs, lspci will print
	# multiple lines

	# See how many times we already used these IDs:
	TIMES_USED=0
	for (( j=0; j < i; j++)); do
	    if ( [ "${VENDOR_IDS[j]}" = "${VENDOR_IDS[i]}" ] &&
	         [ "${MODEL_IDS[j]}"  = "${MODEL_IDS[i]}"  ] ); then
		 TIMES_USED=$((TIMES_USED+1))
	    fi
	done

	BUS_IDS[i]=$(lspci -d ${VENDOR_IDS[i]}:${MODEL_IDS[i]} | 
		     cut -d' ' -f1 | head -n $((TIMES_USED+1)) | tail -n 1)
    done

    for (( i=0 ; i < ${#BUS_IDS[@]}; i++ )) ; do
        # busid from lspci is in format 00:00.00
        # below we convert 0:00.00 in 00:00:00 and then split in 00, 00 and 00
	NUMS=(`echo ${BUS_IDS[$i]} | sed -e "s/\./\:/g" | \
		awk 'BEGIN {FS=":"}{print toupper($1), toupper($2), toupper($3)}'`)
	# now, we convert the numbers from hexa to decimal base
	for (( j=0; j<${#NUMS[@]}; j++ ));  do
		NUMS[$j]=$(printf "%d" 0x${NUMS[$j]})
	done
	# putting it all back together
	BUS_ID="${NUMS[0]}:${NUMS[1]}:${NUMS[2]}"
        echo -e "bus\t${BUS_ID}"

    done
    
    for i in ${DRIVERS[@]}; do
        echo -e "driver\t$i"
    done
} # video_cards

# ******************** MAIN *************************

if [[ "$#" = 0 ]]
then
    ARG=all  
else
    ARG=$1
fi


case $ARG in
    all)
        CARDS=`video_cards`
        INPUT=`discover_input`
        echo "$INPUT" | grep mouse
        echo "$INPUT" | grep mevdev
        echo "$INPUT" | grep kbd
        echo "$INPUT" | grep kevdev
        echo "$CARDS"
        ;;
    all2)
	CARDS=`video_cards`
	INPUT=`discover_input`
        echo "$INPUT"
	echo "$CARDS"
	;;

    mouse|mevdev|kbd|kevdev)
	INPUT=`discover_input`
        echo "$INPUT" | grep $ARG
        ;;
    bus|driver)
	CARDS=`video_cards`
        echo "$CARDS" | grep $ARG
        ;;
    cards)
	CARDS=`video_cards`
        echo "$CARDS"
        ;;

    #debug)
    #    echo "$INPUT" | egrep "(PHYS|HANDLER|NAME|--)"
    #	;;
    *)
        echo "$1: unrecognized argument"
	echo "Valid parameters: "
	echo "mouse:  prints the hal ids of the mice"
	echo "mevdev: prints the evdev mouse events"
	echo "kbd:    prints the hal ids of the keyboards"
	echo "kevdev: prints the evdev keyboard events"
	echo "driver: prints the video card drivers"
	echo "cards:  prints the video card bus IDs"
	echo "all:    prints everything"
        ;;
esac
